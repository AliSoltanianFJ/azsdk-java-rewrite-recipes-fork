type: specs.openrewrite.org/v1beta/recipe
name: com.azure.rewrite.java.core.MigrateAzureCoreSamplesToAzureCoreV2
displayName: Migrate azure-core samples to azure-core-v2
description: This recipe migrates the samples in azure-core to azure-core-v2.
recipeList:
  # Ignore module-info.java for now until OpenRewrite implements support for it
  # Recipe to migrate com.azure.core requirements in module-info.java to com.azure.core.v2
  #- org.openrewrite.text.FindAndReplace:
  #    regex: true
  #    find: 'requires\s+(transitive\s+)?com\.azure\.core(?!\.v2)'
  #    replace: 'requires $1com.azure.core.v2'
  #    filePattern: '**/module-info.java'

  # ----------------------------------
  #
  # Java-Based LST Replacement Recipes
  #
  # ----------------------------------

  # Recipes that converts the parameters and type of the @UnexpectedResponseExceptionType annotation
  # to @UnexpectedResponseExceptionDetail.
  # - Recipes 1-2: Change the attribute names
  # - Recipe 3: Changes the type
  - org.openrewrite.java.ChangeAnnotationAttributeName:
      annotationType: com.azure.core.annotation.UnexpectedResponseExceptionType
      oldAttributeName: value
      newAttributeName: exceptionTypeName
  - org.openrewrite.java.ChangeAnnotationAttributeName:
      annotationType: com.azure.core.annotation.UnexpectedResponseExceptionType
      oldAttributeName: code
      newAttributeName: statusCode
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.annotation.UnexpectedResponseExceptionType
      newFullyQualifiedTypeName: io.clientcore.core.http.annotation.UnexpectedResponseExceptionDetail
  # End @UnexpectedResponseExceptionDetail recipes

  # Recipe that changes all instances of com.azure.core.http.rest.RequestOptions
  # to io.clientcore.core.http.models.RequestOptions
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.http.rest.RequestOptions
      newFullyQualifiedTypeName: io.clientcore.core.http.models.RequestOptions

  # Recipe that changes all instances of com.azure.core.http.rest.Response
  # to io.clientcore.core.http.models.Response
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.http.rest.Response
      newFullyQualifiedTypeName: io.clientcore.core.http.models.Response

  # Recipe that changes all instances of com.azure.core.http.HttpHeaderName
  # to io.clientcore.core.http.models.HttpHeaderName
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.http.HttpHeaderName
      newFullyQualifiedTypeName: io.clientcore.core.http.models.HttpHeaderName

  # Recipe that changes all instances of com.azure.core.annotation.HostParam
  # to io.clientcore.core.http.annotation.HostParam
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.annotation.HostParam
      newFullyQualifiedTypeName: io.clientcore.core.http.annotation.HostParam

  # Recipe that changes all instances of com.azure.core.annotation.HeaderParam
  # to io.clientcore.core.http.annotation.HeaderParam
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.annotation.HeaderParam
      newFullyQualifiedTypeName: io.clientcore.core.http.annotation.HeaderParam

  # Recipe that changes all instances of com.azure.core.annotation.BodyParam
  # to io.clientcore.core.http.annotation.BodyParam
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.annotation.BodyParam
      newFullyQualifiedTypeName: io.clientcore.core.http.annotation.BodyParam

  # Recipe that changes all instances of com.azure.core.annotation.QueryParam
  # to io.clientcore.core.http.annotation.QueryParam
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.annotation.QueryParam
      newFullyQualifiedTypeName: io.clientcore.core.http.annotation.QueryParam

  # Recipe that changes all instances of com.azure.core.annotation.ServiceClient
  # to com.azure.core.v2.annotation.ServiceClient
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.annotation.ServiceClient
      newFullyQualifiedTypeName: com.azure.core.v2.annotation.ServiceClient

  # Recipe that changes all instances of com.azure.core.annotation.ServiceClientBuilder
  # to com.azure.core.v2.annotation.ServiceClientBuilder
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.annotation.ServiceClientBuilder
      newFullyQualifiedTypeName: com.azure.core.v2.annotation.ServiceClientBuilder

  # Recipe that changes all instances of com.azure.core.annotation.ServiceInterface
  # to io.clientcore.core.annotation.ServiceInterface
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.annotation.ServiceInterface
      newFullyQualifiedTypeName: io.clientcore.core.annotation.ServiceInterface

  # Recipe that changes all instances of com.azure.core.annotation.ServiceMethod
  # to com.azure.core.v2.annotation.ServiceMethod
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.annotation.ServiceMethod
      newFullyQualifiedTypeName: com.azure.core.v2.annotation.ServiceMethod

  # Recipe that changes all instances of com.azure.core.annotation.Generated
  # to com.azure.core.v2.annotation.Generated
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.annotation.Generated
      newFullyQualifiedTypeName: com.azure.core.v2.annotation.Generated

  # Recipe that changes all instances of com.azure.core.annotation.Immutable
  # to com.azure.core.v2.annotation.Immutable
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.annotation.Immutable
      newFullyQualifiedTypeName: com.azure.core.v2.annotation.Immutable

  # Recipe that changes all instances of com.azure.core.annotation.ReturnType
  # to com.azure.core.v2.annotation.ReturnType
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.annotation.ReturnType
      newFullyQualifiedTypeName: com.azure.core.v2.annotation.ReturnType

  # Recipe that changes all instances of com.azure.core.util.logging.ClientLogger
  # to io.clientcore.core.util.ClientLogger
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.util.logging.ClientLogger
      newFullyQualifiedTypeName: io.clientcore.core.util.ClientLogger

  # Recipe that changes all instances of com.azure.core.util.BinaryData
  # to io.clientcore.core.util.binarydata.BinaryData
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.util.BinaryData
      newFullyQualifiedTypeName: io.clientcore.core.util.binarydata.BinaryData

  # Recipe that changes all instances of com.azure.core.util.CoreUtils
  # to com.azure.core.v2.util.CoreUtils
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.util.CoreUtils
      newFullyQualifiedTypeName: com.azure.core.v2.util.CoreUtils

  # TODO: Add unit test for KeyCredential recipes
  # Recipe that changes all instances of com.azure.core.http.policy.KeyCredentialPolicy
  # to io.clientcore.core.http.pipeline.KeyCredentialPolicy
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.http.policy.KeyCredentialPolicy
      newFullyQualifiedTypeName: io.clientcore.core.http.pipeline.KeyCredentialPolicy

  # Recipe that changes all instances of com.azure.core.credential.KeyCredential
  # to io.clientcore.core.credential.KeyCredential
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.credential.KeyCredential
      newFullyQualifiedTypeName: io.clientcore.core.credential.KeyCredential

  # Recipe that changes all instances of com.azure.core.client.traits.KeyCredentialTrait
  # to io.clientcore.core.models.traits.KeyCredentialTrait
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.client.traits.KeyCredentialTrait
      newFullyQualifiedTypeName: io.clientcore.core.models.traits.KeyCredentialTrait

  # NOTE:
  #    A copy of the client-core jar file must be in the resources\classpath
  #    directory to reliably parse from clientcore library

  # --------------------------------------------------------------------
  # Recipes to migrate implementations of com.azure.core.client.traits.HttpTrait
  # to io.clientcore.core.models.traits.HttpTrait
  # --------------------------------------------------------------------
  # Change Types from the azure-core to clientcore versions
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.http.HttpClient
      newFullyQualifiedTypeName: io.clientcore.core.http.client.HttpClient
      ignoreDefinition: false
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.http.HttpPipeline
      newFullyQualifiedTypeName: io.clientcore.core.http.pipeline.HttpPipeline
      ignoreDefinition: false
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.http.policy.HttpPipelinePolicy
      newFullyQualifiedTypeName: io.clientcore.core.http.pipeline.HttpPipelinePolicy
      ignoreDefinition: false
#  - org.openrewrite.java.ChangeType:
#      oldFullyQualifiedTypeName: com.azure.core.http.policy.HttpLogOptions
#      newFullyQualifiedTypeName: io.clientcore.core.http.models.HttpLogOptions
#      ignoreDefinition: false
#  - org.openrewrite.java.ChangeType:
#      oldFullyQualifiedTypeName: com.azure.core.http.policy.RetryOptions
#      newFullyQualifiedTypeName: io.clientcore.core.http.models.HttpRetryOptions
#      ignoreDefinition: false

  # Recipe to transform clientOptions to httpRedirectOptions:
    # preserves return type, updates method body and declaring class.
    # Does not rename method
  - com.azure.recipes.v2recipes.ChangeClientOptionsParamsRecipe
  # Rename methods
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.azure.core.client.traits.HttpTrait clientOptions(..)
      newMethodName: httpRedirectOptions
      matchOverrides: true
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.azure.core.client.traits.HttpTrait retryOptions(..)
      newMethodName: httpRetryOptions
      matchOverrides: true
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.azure.core.client.traits.HttpTrait pipeline(..)
      newMethodName: httpPipeline
      matchOverrides: true
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.azure.core.client.traits.HttpTrait addPolicy(..)
      newMethodName: addHttpPipelinePolicy
      matchOverrides: true
 # Change HttpTrait Type to clientcore version
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.client.traits.HttpTrait
      newFullyQualifiedTypeName: io.clientcore.core.models.traits.HttpTrait
  # End HttpTrait recipes
  # Recipe to change com.azure.core.credential package name to io.clientcore.core.credential
  - org.openrewrite.java.ChangePackage:
        oldPackageName: com.azure.core.credential
        newPackageName: io.clientcore.core.credential

  # --------------------------------
  #
  # Text Based Replacement Recipes
  #
  # --------------------------------

  # Recipes that convert exceptionTypeName parameter in @UnexpectedResponseExceptionDetail annotation
  # from the CamelCase form to UPPER_CASE form.
  # - Recipe 1: Adds quotation marks around field, so it can be found easily
  # - Recipe 2: Converts ClientAuthenticationException
  # - Recipe 3: Converts ResourceNotFoundException
  # - Recipe 4: Converts ResourceModifiedException
  # - Recipe 5: Converts HttpResponseException
  - org.openrewrite.text.FindAndReplace:
      regex: true
      find: '@UnexpectedResponseExceptionDetail\s*\(\s*exceptionTypeName\s*=\s*([\w.]+)\s*(?:,\s*statusCode\s*=\s*\{\s*([0-9]+)\s*\}\s*)?\)'
      replace: '@UnexpectedResponseExceptionDetail(exceptionTypeName = "$1", statusCode = { $2 })'
  - org.openrewrite.text.FindAndReplace:
      find: '"ClientAuthenticationException.class"'
      replace: '"CLIENT_AUTHENTICATION"'
  - org.openrewrite.text.FindAndReplace:
      find: '"ResourceNotFoundException.class"'
      replace: '"RESOURCE_NOT_FOUND"'
  - org.openrewrite.text.FindAndReplace:
      find: '"ResourceModifiedException.class"'
      replace: '"RESOURCE_MODIFIED"'
  - org.openrewrite.text.FindAndReplace:
      find: '@UnexpectedResponseExceptionDetail(exceptionTypeName = "HttpResponseException.class", statusCode = {  })'
      replace: '@UnexpectedResponseExceptionDetail'
  # End exceptionTypeName parameter recipes

  # Recipes that update all instances of azure-core exceptions where
  # use is equivalent and type/name change is sufficient/safe.
  # Update to azure-core-v2 version
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.exception.ClientAuthenticationException
      newFullyQualifiedTypeName: com.azure.core.v2.exception.ClientAuthenticationException
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.exception.ResourceModifiedException
      newFullyQualifiedTypeName: com.azure.core.v2.exception.ResourceModifiedException
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.exception.ResourceNotFoundException
      newFullyQualifiedTypeName: com.azure.core.v2.exception.ResourceNotFoundException
  # Update to clientcore version
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.exception.HttpResponseException
      newFullyQualifiedTypeName: io.clientcore.core.http.exception.HttpResponseException
  # End azure-core-exception change type Recipes

  # Recipe that changes all instances of com.azure.core.util.Configuration
  # to io.clientcore.core.util.configuration.Configuration
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.azure.core.util.Configuration
      newFullyQualifiedTypeName: io.clientcore.core.util.configuration.Configuration
